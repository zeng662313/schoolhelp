<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--spring配置文件，声明service,dao，工具类等对象-->

    <!--声明数据源，连接数据库-->
    <context:property-placeholder location="classpath:conf/jdbc.properties" />

    <!--声明数据源，作用是连接数据库-->
    <bean id="myDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!--set注入，提供数据库连接信息-->
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.passwd}"/>

    </bean>
    <!--声明的是 mybatis中提供的 sqlsessionFactoryBean类，这个类内部创建 sqlsessionFactory的-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--set注入，把数据库连接池付给了 datasource属性-->
        <property name="dataSource" ref="myDataSource"/>
        <!--mybatis主配置文件的位置
        configLocation属性是 Resource类型，读取配置文件
        它的赋值，使用 value，指定文件的路径，使用 classpath：表示文件的位置-->
        <property name="configLocation" value="classpath:conf/mybatis.xml"/>
    </bean>
    <!--创建dao对象，使用SqlSession的getMapper(StudentDao.class)
        Mapperscannerconfigurer：在内部调用 getMapper（）生成每个dao接口的代理对象。-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定 SalsessionFactory对象的id-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.yumoxuan.dao"/>
    </bean>
    <!--声明service的注解@Service所在包位置-->
    <context:component-scan base-package="com.yumoxuan.service" />
    <!--事务的配置，注解的配置-->
</beans>